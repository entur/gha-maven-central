name: Release to Maven Central (Maven)
description: "Publish release artifact to Maven Central for a Maven library project. Increments the version based on the latest release tag."
on:
  workflow_call:
    inputs:
      job_runner:
        description: "Job Runner"
        required: false
        type: string
        default: "ubuntu-24.04"
      java_version:
        description: "Java Runtime Version"
        required: false
        type: number
        default: 21
      java_distribution:
        description: "Java distribution for Setup-Java"
        required: false
        type: string
        default: "liberica"
      # GET VERSION
      version_strategy:
        description: 'Strategy to use for version extraction. Currently supports "file" or "tag".'
        required: false
        type: string
        default: 'file'
      version_file_name:
        description: 'The name of the file containing the version number'
        required: false
        type: string
        default: 'pom.xml'
      version_tag_prefix:
        description: 'The prefix of the tag containing the version number'
        required: false
        type: string
        default: 'v'
      # UPDATE VERSION
      version_next:
        description: "The next (semver) version of the artifact. Increments can be automatically detected ('') from the commit message, partially incremented using ('major', 'minor', 'patch'), or be forcefully defined (e.g. '1.3.0')"
        required: false
        type: string
        default: ''
      version_next_suffix:
        description: "The next version of the artifact's suffix. Usual values would be -snapshot or -prerelease"
        required: false
        type: string
        default: ''
      push_to_repo:
        description: 'Whether to push the new version back to the repo'
        required: false
        type: boolean
        default: true
    secrets:
      SONATYPE_AUTH_USER:
        required: true
      SONATYPE_AUTH_TOKEN:
        required: true
      SONATYPE_GPG_KEY_PUBLIC:
        required: true
      SONATYPE_GPG_KEY:
        required: true
      SONATYPE_GPG_KEY_PASSWORD:
        required: true
    outputs:
      version:
        description: Published version
        value: ${{ jobs.publish.outputs.version }}

jobs:
  publish:
    runs-on: ${{ inputs.job_runner }}
    permissions:
      contents: write
      issues: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: ${{ inputs.version_strategy == 'tag' && 'true' || 'false' }}
          fetch-depth: 0

      - name: Set up Java ${{ inputs.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java_version }}
          distribution: ${{ inputs.java_distribution }}

      - id: get-version
        uses: ./.github/actions/get-version
        with:
          version_strategy: ${{ inputs.version_strategy }}
          version_file_name: ${{ inputs.version_file_name }}
          version_tag_prefix: ${{ inputs.version_tag_prefix }}

      - id: increment-version
        uses: ./.github/actions/increment-version
        with:
          version_previous: ${{ steps.get-version.outputs.version }}
          version_next: ${{ inputs.version_next }}
          version_next_suffix: ${{ inputs.version_next_suffix }}

      - name: Verify JReleaser Config
        shell: bash
        env:
          GHA_MAVENCENTRAL_VERSION: ${{ steps.increment-version.outputs.version }}
        run: |
            mvn -B versions:set -DnewVersion=$GHA_MAVENCENTRAL_VERSION jreleaser:config
            mvn clean

      - id: update-version
        uses: ./.github/actions/update-version
        with:
          version: ${{ steps.increment-version.outputs.version }}
          version_file_name: ${{ inputs.version_file_name }}
          push_to_repo: ${{ inputs.push_to_repo }}
    
      - name: Generate JReleaser Maven Central Config
        shell: bash
        env:
          GHA_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
          GHA_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_PASSWORD }}
          GHA_MAVENCENTRAL_GPG_PUBLIC_KEY: ${{ secrets.SONATYPE_GPG_KEY_PUBLIC }}
          GHA_MAVENCENTRAL_GPG_SECRET_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
          GHA_MAVENCENTRAL_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_KEY_PASSWORD }}
        run: |
          mkdir -p $HOME/.jreleaser
          cat << EOF >>$HOME/.jreleaser/config.toml
          JRELEASER_MAVENCENTRAL_USERNAME="$GHA_MAVENCENTRAL_SONATYPE_USERNAME"
          JRELEASER_MAVENCENTRAL_PASSWORD="$GHA_MAVENCENTRAL_SONATYPE_PASSWORD"
          JRELEASER_GPG_PASSPHRASE="$GHA_MAVENCENTRAL_GPG_PASSPHRASE"
          JRELEASER_GPG_PUBLIC_KEY="""$(echo "$GHA_MAVENCENTRAL_GPG_PUBLIC_KEY" | base64 --decode)"""
          JRELEASER_GPG_SECRET_KEY="""$(echo "$GHA_MAVENCENTRAL_GPG_SECRET_KEY" | base64 --decode"""
          EOF

      - name: JReleaser Publish (${{ steps.update-version.outputs.version }})
        id: publish
        shell: bash
        env:
          GHA_MAVENCENTRAL_VERSION: ${{ steps.update-version.outputs.version }}
        run: |

          mvn -B versions:set -DnewVersion=$GHA_MAVENCENTRAL_VERSION -Ppublication
          mvn -B versions:set -DnewVersion=$GHA_MAVENCENTRAL_VERSION jreleaser:full-release
          
          echo ":tada: Published $GHA_MAVENCENTRAL_VERSION to Maven Central." >> $GITHUB_STEP_SUMMARY
          echo "version=$GHA_MAVENCENTRAL_VERSION" >> $GITHUB_OUTPUT
        
      - name: Upload Build Reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/