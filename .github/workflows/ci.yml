name: Entur/Maven-Central/CI

on:
  pull_request:

jobs:
  test-get-version:
      runs-on: ubuntu-24.04
      steps:
        - uses: actions/checkout@v4
          with:
            persist-credentials: false

        # GRADLE

        - id: get-version-gradle-good
          uses: ./.github/actions/get-version
          with:
            version_strategy: "file"
            version_file_name: "fixture/gradle.good.properties"

        - name: Test Good gradle.properties file
          shell: bash
          env: 
            GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-gradle-good.outputs.version }}
          run: |
            if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.0.0" ]]; then
              echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.0.0"
              exit 1
            fi

        - id: get-version-gradle-good-alt
          uses: ./.github/actions/get-version
          with:
            version_strategy: "file"
            version_file_name: "fixture/gradle.good.properties"
            version_file_variable_name: "alt_version"

        - name: Test Good gradle.properties with different version variable name
          shell: bash
          env: 
            GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-gradle-good-alt.outputs.version }}
          run: |
            if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.2.4" ]]; then
              echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.2.4"
              exit 1
            fi

        # MAVEN

        - id: get-version-maven-good
          uses: ./.github/actions/get-version
          with:
            version_strategy: "file"
            version_file_name: "fixture/pom.good.xml"

        - name: Test Good pom.xml file
          shell: bash
          env: 
            GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-maven-good.outputs.version }}
          run: |
            if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.50.3" ]]; then
              echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.50.3"
              exit 1
            fi

        - id: get-version-maven-good-alt
          uses: ./.github/actions/get-version
          with:
            version_strategy: "file"
            version_file_name: "fixture/pom.good.xml"
            version_file_variable_name: "modelVersion"

        - name: Test Good pom.xml with different version variable name
          shell: bash
          env: 
            GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-maven-good-alt.outputs.version }}
          run: |
            if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "4.0.0" ]]; then
              echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 4.0.0"
              exit 1
            fi

  test-increment-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: increment-version-noop-good
        uses: ./.github/actions/increment-version
        with:
          version_previous: "1.0.0"
          version_next: ""

      - name: Test noop increment version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.increment-version-noop-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.0.0" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.0.0"
            exit 1
          fi

      - id: increment-version-auto-good
        uses: ./.github/actions/increment-version
        with:
          version_previous: "1.0.0"

      - name: Test auto increment version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.increment-version-auto-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.0.1" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.0.1"
            exit 1
          fi
    
      - id: increment-version-normal-good
        uses: ./.github/actions/increment-version
        with:
          version_previous: ${{ steps.increment-version-auto-good.outputs.version }}
          version_next: "minor"

      - name: Test normal increment version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.increment-version-normal-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "1.1.0" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 1.1.0"
            exit 1
          fi

      - id: increment-version-static-good
        uses: ./.github/actions/increment-version
        with:
          version_previous: ${{ steps.increment-version-normal-good.outputs.version }}
          version_next: "2.3.5"

      - name: Test static version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.increment-version-static-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "2.3.5" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to 2.3.5"
            exit 1
          fi

  test-update-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # GRADLE

      - id: get-version-gradle-good
        uses: ./.github/actions/get-version
        with:
          version_strategy: "file"
          version_file_name: "fixture/gradle.good.properties"

      - id: update-version-gradle-good
        uses: ./.github/actions/update-version
        with:
          version: ${{ steps.get-version-gradle-good.outputs.version }}
          version_file_name: "fixture/gradle.good.properties"
          push_to_repo: false

      - id: get-version-final-gradle-good
        uses: ./.github/actions/get-version
        with:
          version_strategy: "file"
          version_file_name: "fixture/gradle.good.properties"

      - name: Test gradle.properties update version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-gradle-good.outputs.version }}
          GHA_MAVENCENTRAL_TEST_VERSION_FINAL: ${{ steps.get-version-final-gradle-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "$GHA_MAVENCENTRAL_TEST_VERSION_FINAL" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to $GHA_MAVENCENTRAL_TEST_VERSION_FINAL"
            exit 1
          fi

      # MAVEN

      - id: get-version-maven-good
        uses: ./.github/actions/get-version
        with:
          version_strategy: "file"
          version_file_name: "fixture/pom.good.xml"

      - id: update-version-maven-good
        uses: ./.github/actions/update-version
        with:
          version: ${{ steps.get-version-maven-good.outputs.version }}
          version_file_name: "fixture/pom.good.xml"
          push_to_repo: false

      - id: get-version-final-maven-good
        uses: ./.github/actions/get-version
        with:
          version_strategy: "file"
          version_file_name: "fixture/pom.good.xml"

      - name: Test pom.xml update version
        shell: bash
        env: 
          GHA_MAVENCENTRAL_TEST_VERSION: ${{ steps.get-version-maven-good.outputs.version }}
          GHA_MAVENCENTRAL_TEST_VERSION_FINAL: ${{ steps.get-version-final-maven-good.outputs.version }}
        run: |
          if [[ "$GHA_MAVENCENTRAL_TEST_VERSION" != "$GHA_MAVENCENTRAL_TEST_VERSION_FINAL" ]]; then
            echo "Previous version $GHA_MAVENCENTRAL_TEST_VERSION not equal to $GHA_MAVENCENTRAL_TEST_VERSION_FINAL"
            exit 1
          fi

  update-gradle-publish-doc:
    needs: [test-get-version, test-increment-version, test-update-version]
    uses: entur/gha-meta/.github/workflows/auto-doc.yml@v1.3.0
    with: 
      workflow_file: .github/workflows/gradle-publish.yml
      readme_file: README-gradle-publish.md

  update-maven-publish-doc:
    needs: [test-get-version, test-increment-version, test-update-version]
    uses: entur/gha-meta/.github/workflows/auto-doc.yml@v1.3.0
    with: 
      workflow_file: .github/workflows/maven-publish.yml
      readme_file: README-maven-publish.md